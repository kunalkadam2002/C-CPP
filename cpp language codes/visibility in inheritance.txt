#include<iostream.h>
#include<conio.h>
class Base{
    int a;
    
    protected:
    int b;
    
    public:
    int c;
    
};

class Derived : private Base{
    void showdata(){
        //cout<<a;        will not take part as it is private member
        cout<<b;
        cout<<c;
    }
};

void main(){
    Base b1;
    //public derivation :
    cout<<b1.b;    // b is not accesible as it becomes protected
    cout<<b1.c;    // c is accesible 
    
    //protected derivation :
    Base b1;
    cout<<b1.b;   // b is not accesible as it becomes protected
    cout<<b1.c;   // c is not accesible as it becomes protected
    
    //private derivation :
    Base b1;      
    cout<<b1.b;   //not accesible
    cout<<b1.c;   //not accesible
    
    
    
}